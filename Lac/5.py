# Encapsulation , Class Diagram , Inheritance 

# Encapsulation 
# -------------
# เป็นคุณสมบัติที่สำคัญสำหรับ OOP โดยหมายถึง 
# การนำ attr กับ method มารวมไว้ด้วยกัน และป้องกันไม่ให้ภายนอกสามารถเข้าถึงข้อมูลที่เราไม่ต้องการได้
# แบ่งระดับการเข้าถึงได้ดังนี้ 
# Public    (name)   เข้าถึงได้จากภายในและภายนอก
# Protected (_name)  คล้าย Public แต่ไม่ควรเข้าถึงจากภายนอก
# Private   (__name) ไม่สามารถเห็นได้จากภายนอก

# Class Diagram 
# -------------
# Class Diagram คือ (อธิบายโครงสร้างภายในระบบว่า ในระบบนั้นๆมีคลาสอะไรบ้าง แต่ละคลาสมีความสัมพันธ์กันอย่างไร)
# ประกอบด้วย [className,Attrt,method,ระดับการเข้าถึงข้อมูล] 
# ซึ่งความสัมพันธ์แบ่งได้ตามนี้
# 1.Association (เป็นความสัมพันธ์ระหว่าางคลาส ที่กระทำจากวัตถุหนึ่งไปอีกวัตถุหนึ่ง)

# 1.1 Unary association
# --------------------- 
# (การกระทำในทิศทางเดียว) Ex คสพรอบฉายกับโรงภาพยนต์
# [show]-------->[cinemaHall] show กระทำ(Verb...) cinemaHall 
# ดังนั้น class cinemaHall จำเป็นต้องเก็บข้อมูล ของshow(รอบฉายไว้ด้วย)

# 1.2 Binary association 
# --------------------
# (คสพแบบ2ทิศทาง ข้อมูลคนละตัวแต่มีการใช้งานร่วมกัน) 
# Ex (การจอง)booking -------- (การจ่ายเงิน)Payment
# Ex class Person (เจ้านายกับลูกน้อง) คสพก็จะวนไปเรื่อยๆใน class Person
# Ex class Person (เพื่อน) คสพก็จะวนไปเรื่อยๆใน class Person เช่นเดียวกัน

# 2.Dependency 
# ------------
# (กำหนดให้ a พึ่ง b,bเปลี่ยน aเปลี่ยน,แต่ถ้าaเปลี่ยน bไม่จำเป็นต้องเปลี่ยนก็ได้)

# 3.Aggregation  (คล้ายกับ Assosiation แต่อยู่กันแบบหลวมๆกว่า)
# -------------
# คลาสที่เป็นองค์ประกอบของอีกคลาสหนึ่ง ซึ่งคสพสามารถขาดออกจากกันได้จะไม่มีผลกระทบกัน
# Ex movieCatalog +------> movie

# 4.Composition (พึ่งพาอาศัยกัน ถ้าตัวนึงหาย อีกตัวก็หายไปด้วย)
# ---------------------------------------------------

# Multiplicities คสพในด้านของจำนวนเป็นในรูปแบบไหน 
# - 0..n = [0,1,2,...n]
# - 0..* = [0,1,2,...]
# - 1    = [1] only
# - 1..* = [1,2,3,...]