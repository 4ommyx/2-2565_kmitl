# list [,,,] เป็นโครงสร้างข้อมูลคล้าย arrayแต่สามารถเก็บข้อมูลได้หลาย type
# memmory ใน list หากมีการเปลี่ยนแปลงค่า 
# ค่าเก่า ณ index นั้นจะถูกเคลียร์ทันที 

# list ใน list 
# ------------
# lis = [1,2,['a',1],4] 
# lis[1] = 2 lis[2] = ['a',1] 
# lis[2][1] = 1

# การเพิ่มข้อมูลใน lis 
# ------------ 
# lisName.append("data")

# การลบข้อมูลใน lis 
# ------------ 
# lisName.pop() ลบตัวท้าย 
# lisName.remove("")ระบุข้อมูล 
# lisName.clear()เคลียร์ทั้งlis

# ตรวจสอบข้อมูลใน lis lis = [1,3,5,7,9] 
# -----------------------
# print(3 in lis) // True

# การตรวจสอบ(เปรียบเทียบ lis)
# ------------------------ 
# เปรียบเทียบ index ต่อ index (indexแรกก่อน) 
# ถ้าเท่ากันจะไล่indexไปเรื่อยๆ

# การนับจำนวนที่ซ้ำใน lis 
# lisName.count("data") data = ค่าของสมาชิกใน lis ที่ซ้ำ 

# lis comprehesion เป็นคำสั่งแบบ oneline 
# ------------------------ 
# sq = [num**2 for num in range(1,10)] for ตั้งแต่ 1-9 เก็บไว้ในตัวแปร num 
# และ return ค่า num**2 ออกมา เก็บไว้ใน list ชื่อว่า sq

# tuple (,,,) โครงสร้างข้อมูลคล้าย lis 
# แต่เมื่อกำหนดค่าตัวแปรแล้ว จะไม่สามารถแก้ไขสมาชิกใน tup ได้ 
# คุณสมบัติต่างๆเหมือน lisเลย 
# การเปลี่ยนแปลงค่าสมาชิกที่เป็น lis ที่อยู่ใน tup สามารถเปลี่ยนแปลงได้เช่นกัน tup = (1,2,[3,4],5) เปลี่ยน index 2 ได้

# mutable (เปลี่ยนแปลงได้) / immutable (เปลี่ยนแปลงไม่ได้) 
# ------------------------------------------------
# lis เปลี่ยนแปลงได้ (mutable) int float string (immutable) 
# ข้อมูลพวก immu ถ้าเราแก้ไขข้อมูลในตัวแปร python จะทำลายข้อมูลนั้น และสร้างขึ้นใหม่ ทำให้ id เปลี่ยนแปลงด้วย mutable 
# ถ้าแก้ไขค่า id เดิม ระวังในการ define ค่าระหว่างฟังก์ชั่น
